#!/usr/bin/env bash
set -eo pipefail

# Create tor hidden_service dir for storing hostname and private_key files
echo "[TOR] Ensuring hidden_service directory exists"
mkdir -p "${HOME}/hidden_service"

# WRite the private_key file using HIDDEN_PRIVATE_KEY if set
echo "[TOR] Writing hidden_service/private_key file from HIDDEN_PRIVATE_KEY env"
if [ ! -z "${HIDDEN_PRIVATE_KEY}" ]; then
    echo -e "${HIDDEN_PRIVATE_KEY}" > "${HOME}/hidden_service/private_key"
else
    echo "[TOR] WARNING: env HIDDEN_PRIVATE_KEY is not set"
fi

# Write the hostname file using HIDDEN_DOT_ONION if set
echo "[TOR] Writing hidden_service/hostname file from HIDDEN_DOT_ONION env"
if [ ! -z "${HIDDEN_DOT_ONION}" ]; then
    echo "${HIDDEN_DOT_ONION}" > "${HOME}/hidden_service/hostname"
else
    echo "[TOR] WARNING: env HIDDEN_DOT_ONION is not set"
fi

# Generate the torrc file using the app's custom template (if set), else the default template
if [ -f "${HOME}/config/torrc.erb" ]; then
    echo "[TOR] Compiling user-defined torrc from config/torrc.erb"
    erb "${HOME}/config/torrc.erb" > "${HOME}/tor/etc/tor/torrc"
else
    echo "[TOR] Using default torrc.erb"
    erb "${HOME}/tor/torrc.erb" > "${HOME}/tor/etc/tor/torrc"
fi

# Generate a new private key and hostname if both were not specified
if [ ! -f "${HOME}/hidden_service/private_key" ] || [ ! -f "${HOME}/hidden_service/hostname" ]; then
    echo "[TOR] WARNING: Private key and/or hostname were not specified"
    echo "[TOR] WARNING: Attempting to generate a new private key and hostname"

    # Ensure both private_key and hostname files are really gone
    rm -f "${HOME}/hidden_service/private_key" "${HOME}/hidden_service/hostname"

    # Start Tor in the background and track the PID
    "${HOME}/tor/bin/tor" -f "${HOME}/tor/etc/tor/torrc" & TOR_PID=$!

    # Wait until private key and hostname are generated then kill Tor (for now)
    TOR_AUTOGEN_TRIES_REMAINING=5
    while [ ! -f "${HOME}/hidden_service/private_key" ] && [ ! -f "${HOME}/hidden_service/hostname" ]; do
        TOR_AUTOGEN_TRIES_REMAINING=$((TOR_AUTOGEN_TRIES_REMAINING-1))
        if [ TOR_AUTOGEN_TRIES_REMAINING -eq 0 ]; then
            echo "[TOR] FAILURE: Unable to automatically generate a hostname and private_key"
            exit 1
        fi
        sleep 1
    done
    kill TOR_PID
fi

# Validate tor config

TOR_HOSTNAME=$(cat "${HOME}/hidden_service/hostname")

# Print some useful info
echo ""
echo "[TOR] ==================================================================="
echo "[TOR] Starting hidden service at ${TOR_HOSTNAME}"
echo "[TOR] You may dangerously print your private_key by running this command:"
echo "[TOR] heroku ps:exec --dyno=${DYNO} 'cat \"${HOME}/hidden_service/private_key\"'"
echo "[TOR] ==================================================================="
echo ""

# Start Tor
"${HOME}/tor/bin/tor" -f "${HOME}/tor/etc/tor/torrc"
